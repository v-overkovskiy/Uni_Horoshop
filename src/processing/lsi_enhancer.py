"""
LSI (Latent Semantic Indexing) Enhancer
–û–±–æ–≥–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º–∏ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–ª—é—á–∞–º–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è SEO
"""
import logging
import re
from typing import Dict, List, Any, Optional
from src.llm.smart_llm_client import SmartLLMClient

logger = logging.getLogger(__name__)

class LSIEnhancer:
    """–û–±–æ–≥–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç LSI-–∫–ª—é—á–∞–º–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º"""
    
    def __init__(self):
        self.llm = SmartLLMClient()
        
    async def enhance_with_lsi(self, content: Dict[str, Any], product_facts: Dict[str, Any], locale: str) -> Dict[str, Any]:
        """
        –û–±–æ–≥–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç LSI-–∫–ª—é—á–∞–º–∏
        
        Args:
            content: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç (description, advantages, faq)
            product_facts: —Ñ–∞–∫—Ç—ã –æ —Ç–æ–≤–∞—Ä–µ
            locale: —è–∑—ã–∫ (ru/ua)
            
        Returns:
            –û–±–æ–≥–∞—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ LSI-–∫–ª—é—á–∞–º–∏
        """
        try:
            logger.info(f"üîç LSI Enhancement: –Ω–∞—á–∏–Ω–∞–µ–º –æ–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–ª—è {locale}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á (–Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞)
            main_keyword = product_facts.get('title', '')
            product_type = product_facts.get('product_type', '')
            category = product_facts.get('category', '')
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º LSI-–∫–ª—é—á–∏
            lsi_keywords = await self._generate_lsi_keywords(
                main_keyword=main_keyword,
                product_type=product_type,
                category=category,
                locale=locale
            )
            
            if not lsi_keywords:
                logger.warning("‚ö†Ô∏è LSI-–∫–ª—é—á–∏ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
                return content
            
            logger.info(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(lsi_keywords)} LSI-–∫–ª—é—á–µ–π")
            
            # –û–±–æ–≥–∞—â–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
            if content.get('description'):
                content['description'] = await self._inject_lsi_into_description(
                    description=content['description'],
                    lsi_keywords=lsi_keywords,
                    locale=locale
                )
            
            # –û–±–æ–≥–∞—â–∞–µ–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            if content.get('advantages'):
                content['advantages'] = await self._inject_lsi_into_advantages(
                    advantages=content['advantages'],
                    lsi_keywords=lsi_keywords,
                    locale=locale
                )
            
            # FAQ –æ–±—ã—á–Ω–æ –ù–ï —Ç—Ä–æ–≥–∞–µ–º - –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏
            
            logger.info("‚úÖ LSI Enhancement: –∫–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–æ–≥–∞—â–µ–Ω")
            return content
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ LSI Enhancement: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
            return content
    
    async def _generate_lsi_keywords(
        self, 
        main_keyword: str, 
        product_type: str,
        category: str,
        locale: str
    ) -> List[str]:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ LSI-–∫–ª—é—á–∏"""
        
        system_prompt = self._get_lsi_generation_prompt(locale)
        
        user_message = f"""
–û–°–ù–û–í–ù–û–ô –ö–õ–Æ–ß: {main_keyword}
–¢–ò–ü –¢–û–í–ê–†–ê: {product_type}
–ö–ê–¢–ï–ì–û–†–ò–Ø: {category}

–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 10-15 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö LSI-–∫–ª—é—á–µ–π –¥–ª—è SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.
"""
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º system prompt –∏ user message
        full_prompt = f"{system_prompt}\n\n{user_message}"
        
        try:
            response = await self.llm.generate(
                prompt=full_prompt,
                context={'type': 'lsi_generation', 'locale': locale},
                max_tokens=200,
                temperature=0.7
            )
            
            # –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç - –æ–∂–∏–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π
            lsi_keywords = self._parse_lsi_response(response)
            
            logger.info(f"üîç LSI-–∫–ª—é—á–∏: {lsi_keywords[:5]}..." if len(lsi_keywords) > 5 else f"üîç LSI-–∫–ª—é—á–∏: {lsi_keywords}")
            
            return lsi_keywords
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ LSI-–∫–ª—é—á–µ–π: {e}")
            return []
    
    def _get_lsi_generation_prompt(self, locale: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ LSI-–∫–ª—é—á–µ–π"""
        
        if locale == 'ru':
            return """–¢—ã ‚Äî SEO-—ç–∫—Å–ø–µ—Ä—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –ª–∞—Ç–µ–Ω—Ç–Ω–æ-—Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ (LSI).

–ó–ê–î–ê–ß–ê: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ LSI-–∫–ª—é—á–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞.

LSI-–ö–õ–Æ–ß–ò ‚Äî —ç—Ç–æ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –∏ —Ñ—Ä–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ:
1. –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏ –±–ª–∏–∑–∫–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∫–ª—é—á—É
2. –ü–æ–º–æ–≥–∞—é—Ç –ø–æ–∏—Å–∫–æ–≤—ã–º —Å–∏—Å—Ç–µ–º–∞–º –ø–æ–Ω—è—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç
3. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤ —Ç–µ–∫—Å—Ç–µ –æ —Ç–æ–≤–∞—Ä–µ
4. –ù–ï —è–≤–ª—è—é—Ç—Å—è —Ç–æ—á–Ω—ã–º–∏ —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏, –Ω–æ –ª–æ–≥–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω—ã

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–π –¢–û–õ–¨–ö–û —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∫–ª—é—á–∏
‚úÖ –ö–ª—é—á–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ç–æ–≤–∞—Ä–∞
‚úÖ –ò–∑–±–µ–≥–∞–π —Å–ø–∞–º–∞ –∏ –ø–µ—Ä–µ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
‚úÖ –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–í–µ—Ä–Ω–∏ —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –ë–ï–ó –Ω—É–º–µ—Ä–∞—Ü–∏–∏.
–ü—Ä–∏–º–µ—Ä: –π–æ–≥–∞-–º–∞—Ç, –∫–æ–≤—Ä–∏–∫ –¥–ª—è —Ñ–∏—Ç–Ω–µ—Å–∞, –∑–∞–Ω—è—Ç–∏—è –π–æ–≥–æ–π, –∞—Å–∞–Ω—ã, –ø–∏–ª–∞—Ç–µ—Å

–ì–ï–ù–ï–†–ò–†–£–ô –¢–û–õ–¨–ö–û –ö–õ–Æ–ß–ò, –ù–ò–ß–ï–ì–û –ë–û–õ–¨–®–ï."""

        else:  # ua
            return """–¢–∏ ‚Äî SEO-–µ–∫—Å–ø–µ—Ä—Ç, —è–∫–∏–π —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –Ω–∞ –ª–∞—Ç–µ–Ω—Ç–Ω–æ-—Å–µ–º–∞–Ω—Ç–∏—á–Ω—ñ–π —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó (LSI).

–ó–ê–í–î–ê–ù–ù–Ø: –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ LSI-–∫–ª—é—á—ñ –¥–ª—è —Ç–æ–≤–∞—Ä—É.

LSI-–ö–õ–Æ–ß–Ü ‚Äî —Ü–µ –ø–æ–≤'—è–∑–∞–Ω—ñ —Ç–µ—Ä–º—ñ–Ω–∏ —Ç–∞ —Ñ—Ä–∞–∑–∏, —è–∫—ñ:
1. –°–µ–º–∞–Ω—Ç–∏—á–Ω–æ –±–ª–∏–∑—å–∫—ñ –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª—é—á–∞
2. –î–æ–ø–æ–º–∞–≥–∞—é—Ç—å –ø–æ—à—É–∫–æ–≤–∏–º —Å–∏—Å—Ç–µ–º–∞–º –∑—Ä–æ–∑—É–º—ñ—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç
3. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –ø—Ä–∏—Ä–æ–¥–Ω–æ –≤ —Ç–µ–∫—Å—Ç—ñ –ø—Ä–æ —Ç–æ–≤–∞—Ä
4. –ù–ï —î —Ç–æ—á–Ω–∏–º–∏ —Å–∏–Ω–æ–Ω—ñ–º–∞–º–∏, –∞–ª–µ –ª–æ–≥—ñ—á–Ω–æ –ø–æ–≤'—è–∑–∞–Ω—ñ

–í–ò–ú–û–ì–ò:
‚úÖ –ì–µ–Ω–µ—Ä—É–π –õ–ò–®–ï —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ –∫–ª—é—á—ñ
‚úÖ –ö–ª—é—á—ñ –º–∞—é—Ç—å –±—É—Ç–∏ –ø—Ä–∏—Ä–æ–¥–Ω–∏–º–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É —Ç–æ–≤–∞—Ä—É
‚úÖ –£–Ω–∏–∫–∞–π —Å–ø–∞–º—É —Ç–∞ –ø–µ—Ä–µ–æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
‚úÖ –§–æ–∫—É—Å –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π –¥–æ—Å–≤—ñ–¥

–§–û–†–ú–ê–¢ –í–Ü–î–ü–û–í–Ü–î–Ü:
–ü–æ–≤–µ—Ä–Ω–∏ —Å–ø–∏—Å–æ–∫ –∫–ª—é—á—ñ–≤ —á–µ—Ä–µ–∑ –∫–æ–º—É, –ë–ï–ó –Ω—É–º–µ—Ä–∞—Ü—ñ—ó.
–ü—Ä–∏–∫–ª–∞–¥: –π–æ–≥–∞-–º–∞—Ç, –∫–∏–ª–∏–º–æ–∫ –¥–ª—è —Ñ—ñ—Ç–Ω–µ—Å—É, –∑–∞–Ω—è—Ç—Ç—è –π–æ–≥–æ—é, –∞—Å–∞–Ω–∏, –ø—ñ–ª–∞—Ç–µ—Å

–ì–ï–ù–ï–†–£–ô –¢–Ü–õ–¨–ö–ò –ö–õ–Æ–ß–Ü, –ù–Ü–ß–û–ì–û –ë–Ü–õ–¨–®–ï."""
    
    def _parse_lsi_response(self, response: str) -> List[str]:
        """–ü–∞—Ä—Å–∏—Ç –æ—Ç–≤–µ—Ç LLM –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç LSI-–∫–ª—é—á–∏"""
        
        # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã
        response = response.strip()
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ –∑–∞–ø—è—Ç—ã–º
        keywords = [k.strip() for k in response.split(',')]
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –ø—É—Å—Ç—ã–µ –∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ
        keywords = [k for k in keywords if k and len(k) < 100]
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 15 –∫–ª—é—á–µ–π
        return keywords[:15]
    
    async def _inject_lsi_into_description(
        self, 
        description: str, 
        lsi_keywords: List[str],
        locale: str
    ) -> str:
        """–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤–ø–ª–µ—Ç–∞–µ—Ç LSI-–∫–ª—é—á–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ"""
        
        system_prompt = self._get_lsi_injection_prompt(locale)
        
        user_message = f"""
–ò–°–•–û–î–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï:
{description}

LSI-–ö–õ–Æ–ß–ò –î–õ–Ø –í–ü–õ–ï–¢–ï–ù–ò–Ø:
{', '.join(lsi_keywords)}

–ü–µ—Ä–µ–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É—è LSI-–∫–ª—é—á–∏.
"""
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º system prompt –∏ user message
        full_prompt = f"{system_prompt}\n\n{user_message}"
        
        try:
            enhanced_description = await self.llm.generate(
                prompt=full_prompt,
                context={'type': 'lsi_injection', 'locale': locale},
                max_tokens=1000,
                temperature=0.5
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —Å—Ç–∞–ª–æ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–º –∏–ª–∏ –¥–ª–∏–Ω–Ω—ã–º
            if len(enhanced_description) < len(description) * 0.8:
                logger.warning("‚ö†Ô∏è –û–±–æ–≥–∞—â–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ")
                return description
            
            if len(enhanced_description) > len(description) * 1.5:
                logger.warning("‚ö†Ô∏è –û–±–æ–≥–∞—â–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ")
                return description
            
            logger.info("‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–æ–≥–∞—â–µ–Ω–æ LSI-–∫–ª—é—á–∞–º–∏")
            return enhanced_description
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—ä–µ–∫—Ü–∏–∏ LSI –≤ –æ–ø–∏—Å–∞–Ω–∏–µ: {e}")
            return description
    
    def _get_lsi_injection_prompt(self, locale: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –∏–Ω—ä–µ–∫—Ü–∏–∏ LSI-–∫–ª—é—á–µ–π"""
        
        if locale == 'ru':
            return """–¢—ã ‚Äî SEO-–∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤.

–ó–ê–î–ê–ß–ê: –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É—è LSI-–∫–ª—é—á–∏.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
‚úÖ –°–æ—Ö—Ä–∞–Ω–∏ –í–ï–°–¨ —Å–º—ã—Å–ª –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
‚úÖ –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π LSI-–∫–ª—é—á–∏ –ï–°–¢–ï–°–¢–í–ï–ù–ù–û, –∫–∞–∫ –±—ã –æ–Ω–∏ –ø–æ—è–≤–∏–ª–∏—Å—å –≤ –æ–±—ã—á–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
‚úÖ –ù–ï –¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç —Å–ø–∞–º–Ω—ã–º –∏–ª–∏ –ø–µ—Ä–µ–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º
‚úÖ –°–æ—Ö—Ä–∞–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É (2 –∞–±–∑–∞—Ü–∞)
‚úÖ –°–æ—Ö—Ä–∞–Ω–∏ –¥–ª–∏–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è (¬±20% –æ—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ)
‚úÖ –ü–∏—à–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –∫–∞–∫ –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞

–ó–ê–ü–†–ï–©–ï–ù–û:
‚ùå –ü–µ—Ä–µ—á–∏—Å–ª—è—Ç—å –∫–ª—é—á–∏ —Å–ø–∏—Å–∫–æ–º
‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –∫–ª—é—á–∏ –Ω–∞—Å–∏–ª—å–Ω–æ
‚ùå –ù–∞—Ä—É—à–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞
‚ùå –î–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–Ω–µ–µ —á–µ–º –Ω—É–∂–Ω–æ

–ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —Ç–µ –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç.

–í–ï–†–ù–ò –¢–û–õ–¨–ö–û –û–ë–û–ì–ê–©–ï–ù–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï, –ë–ï–ó –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í."""

        else:  # ua
            return """–¢–∏ ‚Äî SEO-–∫–æ–ø—ñ—Ä–∞–π—Ç–µ—Ä, —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç –∑ –ø—Ä–∏—Ä–æ–¥–Ω–æ—ó —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤.

–ó–ê–í–î–ê–ù–ù–Ø: –ü–µ—Ä–µ–ø–∏—Å–∞—Ç–∏ –æ–ø–∏—Å —Ç–æ–≤–∞—Ä—É, –ø—Ä–∏—Ä–æ–¥–Ω–æ —ñ–Ω—Ç–µ–≥—Ä—É—é—á–∏ LSI-–∫–ª—é—á—ñ.

–ö–†–ò–¢–ò–ß–ù–û –í–ê–ñ–õ–ò–í–û:
‚úÖ –ó–±–µ—Ä–µ–∂–∏ –í–ï–°–¨ –∑–º—ñ—Å—Ç –≤–∏—Ö—ñ–¥–Ω–æ–≥–æ –æ–ø–∏—Å—É
‚úÖ –Ü–Ω—Ç–µ–≥—Ä—É–π LSI-–∫–ª—é—á—ñ –ü–†–ò–†–û–î–ù–û, —è–∫ –±–∏ –≤–æ–Ω–∏ –∑'—è–≤–∏–ª–∏—Å—è –≤ –∑–≤–∏—á–∞–π–Ω–æ–º—É —Ç–µ–∫—Å—Ç—ñ
‚úÖ –ù–ï —Ä–æ–±–∏ —Ç–µ–∫—Å—Ç —Å–ø–∞–º–Ω–∏–º –∞–±–æ –ø–µ—Ä–µ–æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–º
‚úÖ –ó–±–µ—Ä–µ–∂–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É (2 –∞–±–∑–∞—Ü–∏)
‚úÖ –ó–±–µ—Ä–µ–∂–∏ –¥–æ–≤–∂–∏–Ω—É –æ–ø–∏—Å—É (¬±20% –≤—ñ–¥ –≤–∏—Ö—ñ–¥–Ω–æ–≥–æ)
‚úÖ –ü–∏—à–∏ –ø—Ä–∏—Ä–æ–¥–Ω–æ, —è–∫ –¥–ª—è –ª—é–¥–∏–Ω–∏

–ó–ê–ë–û–†–û–ù–ï–ù–û:
‚ùå –ü–µ—Ä–µ–ª—ñ—á—É–≤–∞—Ç–∏ –∫–ª—é—á—ñ —Å–ø–∏—Å–∫–æ–º
‚ùå –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ –∫–ª—é—á—ñ –Ω–∞—Å–∏–ª—å–Ω–æ
‚ùå –ü–æ—Ä—É—à—É–≤–∞—Ç–∏ –ø—Ä–∏—Ä–æ–¥–Ω—ñ—Å—Ç—å —Ç–µ–∫—Å—Ç—É
‚ùå –†–æ–±–∏—Ç–∏ —Ç–µ–∫—Å—Ç –¥–æ–≤—à–∏–º –Ω—ñ–∂ –ø–æ—Ç—Ä—ñ–±–Ω–æ

–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –õ–ò–®–ï —Ç—ñ –∫–ª—é—á—ñ, —è–∫—ñ –ø—Ä–∏—Ä–æ–¥–Ω–æ –≤–ø–∏—Å—É—é—Ç—å—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç.

–ü–û–í–ï–†–ù–ò –¢–Ü–õ–¨–ö–ò –ó–ë–ê–ì–ê–ß–ï–ù–ò–ô –û–ü–ò–°, –ë–ï–ó –ö–û–ú–ï–ù–¢–ê–†–Ü–í."""
    
    async def _inject_lsi_into_advantages(
        self, 
        advantages: List[str], 
        lsi_keywords: List[str],
        locale: str
    ) -> List[str]:
        """
        –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ–±–æ–≥–∞—â–∞–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ LSI-–∫–ª—é—á–∞–º–∏
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å
        """
        
        # –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ 2-3 –∫–ª—é—á–∞ –¥–ª—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤
        selected_keywords = lsi_keywords[:3]
        
        if not selected_keywords:
            return advantages
        
        # –û–±–æ–≥–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 2 –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
        enhanced_advantages = advantages.copy()
        
        try:
            for i in range(min(2, len(enhanced_advantages))):
                if i < len(selected_keywords):
                    keyword = selected_keywords[i]
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –∫–ª—é—á–∞ –≤ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ
                    if keyword.lower() not in enhanced_advantages[i].lower():
                        # –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á
                        enhanced_advantages[i] = await self._enhance_advantage_with_keyword(
                            advantage=enhanced_advantages[i],
                            keyword=keyword,
                            locale=locale
                        )
            
            return enhanced_advantages
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–æ–≥–∞—â–µ–Ω–∏—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤: {e}")
            return advantages
    
    async def _enhance_advantage_with_keyword(
        self, 
        advantage: str, 
        keyword: str,
        locale: str
    ) -> str:
        """–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–ª—é—á –≤ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ"""
        
        if locale == 'ru':
            prompt = f"""–ü–µ—Ä–µ–ø–∏—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–≤ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ "{keyword}".

–ò–°–•–û–î–ù–û–ï –ü–†–ï–ò–ú–£–©–ï–°–¢–í–û: {advantage}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –°–æ—Ö—Ä–∞–Ω–∏ —Å–º—ã—Å–ª
- –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π –∫–ª—é—á –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ
- –ù–µ –¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–Ω–µ–µ —á–µ–º –Ω–∞ 30%
- –ü–∏—à–∏ –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞, –Ω–µ –¥–ª—è —Ä–æ–±–æ—Ç–∞

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ."""
        else:
            prompt = f"""–ü–µ—Ä–µ–ø–∏—à–∏ –ø–µ—Ä–µ–≤–∞–≥—É —Ç–æ–≤–∞—Ä—É, –ø—Ä–∏—Ä–æ–¥–Ω–æ —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞–≤—à–∏ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ "{keyword}".

–í–ò–•–Ü–î–ù–ê –ü–ï–†–ï–í–ê–ì–ê: {advantage}

–í–∏–º–æ–≥–∏:
- –ó–±–µ—Ä–µ–∂–∏ –∑–º—ñ—Å—Ç
- –Ü–Ω—Ç–µ–≥—Ä—É–π –∫–ª—é—á –ø—Ä–∏—Ä–æ–¥–Ω–æ
- –ù–µ —Ä–æ–±–∏ —Ç–µ–∫—Å—Ç –¥–æ–≤—à–∏–º –Ω—ñ–∂ –Ω–∞ 30%
- –ü–∏—à–∏ –¥–ª—è –ª—é–¥–∏–Ω–∏, –Ω–µ –¥–ª—è —Ä–æ–±–æ—Ç–∞

–ü–æ–≤–µ—Ä–Ω–∏ –¢–Ü–õ–¨–ö–ò –ø–µ—Ä–µ–ø–∏—Å–∞–Ω—É –ø–µ—Ä–µ–≤–∞–≥—É."""
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤ –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        full_prompt = f"–¢–∏ ‚Äî SEO-–∫–æ–ø—ñ—Ä–∞–π—Ç–µ—Ä.\n\n{prompt}"
        
        try:
            enhanced = await self.llm.generate(
                prompt=full_prompt,
                context={'type': 'lsi_advantage', 'locale': locale},
                max_tokens=200,
                temperature=0.5
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É
            if len(enhanced) > len(advantage) * 1.5:
                return advantage
            
            return enhanced.strip()
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–æ–≥–∞—â–µ–Ω–∏—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞: {e}")
            return advantage

