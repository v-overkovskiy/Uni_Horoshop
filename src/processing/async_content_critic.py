"""
–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π ContentCritic –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
"""
import json
import logging
import os
from typing import Dict, Any, Optional
import httpx
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

logger = logging.getLogger(__name__)

class AsyncContentCritic:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    
    def __init__(self, api_key: Optional[str] = None):
        import os
        self.api_key = api_key or os.getenv("OPENAI_API_KEY")
        if not self.api_key:
            raise ValueError("OpenAI API key not provided")
        
        self.model = os.getenv("OPENAI_MODEL", "gpt-4o-mini")
        self.base_url = "https://api.openai.com/v1/chat/completions"
    
    async def review(self, draft_content: Dict[str, Any], product_facts: Dict[str, Any], 
                    locale: str, client: httpx.AsyncClient) -> Dict[str, Any]:
        """
        –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        
        Args:
            draft_content: –ß–µ—Ä–Ω–æ–≤–∏–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            product_facts: –§–∞–∫—Ç—ã –æ —Ç–æ–≤–∞—Ä–µ
            locale: –õ–æ–∫–∞–ª—å (ru/ua)
            client: HTTP –∫–ª–∏–µ–Ω—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
            
        Returns:
            Dict —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        """
        try:
            logger.info(f"üîç ContentCritic: –ù–∞—á–∏–Ω–∞—é –∫–æ–º–ø–ª–µ–∫—Å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è {locale}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–∞–∫ read-only
            original_specs = product_facts.get('specs', [])
            if original_specs:
                logger.info(f"üîí ContentCritic: –°–æ—Ö—Ä–∞–Ω—è–µ–º {len(original_specs)} –∏—Å—Ö–æ–¥–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∫–∞–∫ read-only")
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            system_prompt = self._get_system_prompt(locale)
            user_prompt = self._create_user_prompt(draft_content, product_facts, locale)
            
            # –í—ã–∑—ã–≤–∞–µ–º LLM –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            review_result = await self._real_llm_review(
                draft_content, product_facts, locale, system_prompt, user_prompt, client
            )
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            if original_specs and 'revised_content' in review_result:
                review_result['revised_content']['specs'] = original_specs
                logger.info(f"üîí ContentCritic: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏—Å—Ö–æ–¥–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ({len(original_specs)} —à—Ç)")
            
            logger.info(f"‚úÖ ContentCritic: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Å—Ç–∞—Ç—É—Å: {review_result.get('overall_status', 'UNKNOWN')}")
            return review_result
            
        except Exception as e:
            logger.error(f"‚ùå ContentCritic: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º mock-—Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            return self._mock_review(draft_content, product_facts, locale)
    
    async def _real_llm_review(self, draft_content: Dict[str, Any], product_facts: Dict[str, Any],
                              locale: str, system_prompt: str, user_prompt: str, 
                              client: httpx.AsyncClient) -> Dict[str, Any]:
        """–†–µ–∞–ª—å–Ω–∞—è LLM-–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        try:
            logger.info("üîç ContentCritic: –í—ã–∑—ã–≤–∞—é LLM –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
            
            headers = {
                "Authorization": f"Bearer {self.api_key}",
                "Content-Type": "application/json"
            }
            
            data = {
                "model": self.model,
                "messages": [
                    {"role": "system", "content": system_prompt},
                    {"role": "user", "content": user_prompt}
                ],
                "temperature": 0.1,
                "max_tokens": 4000
            }
            
            response = await client.post(
                self.base_url,
                headers=headers,
                json=data,
                timeout=30
            )
            
            if response.status_code == 200:
                result = response.json()
                llm_response = result['choices'][0]['message']['content']
                
                try:
                    # –£–±–∏—Ä–∞–µ–º markdown –±–ª–æ–∫–∏ ```json –∏ ```
                    if llm_response.startswith('```json'):
                        llm_response = llm_response[7:]  # –£–±–∏—Ä–∞–µ–º ```json
                    if llm_response.endswith('```'):
                        llm_response = llm_response[:-3]  # –£–±–∏—Ä–∞–µ–º ```
                    llm_response = llm_response.strip()
                    
                    review_result = json.loads(llm_response)
                    logger.info("‚úÖ ContentCritic: LLM –≤–µ—Ä–Ω—É–ª –≤–∞–ª–∏–¥–Ω—ã–π JSON")
                    return review_result
                except json.JSONDecodeError as e:
                    logger.warning(f"‚ö†Ô∏è ContentCritic: LLM –≤–µ—Ä–Ω—É–ª –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback: {e}")
                    return self._mock_review(draft_content, product_facts, locale)
            else:
                logger.warning(f"‚ö†Ô∏è ContentCritic: LLM API –æ—à–∏–±–∫–∞ {response.status_code}, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback")
                return self._mock_review(draft_content, product_facts, locale)
                
        except Exception as e:
            logger.error(f"‚ùå ContentCritic: –û—à–∏–±–∫–∞ LLM-–ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
            logger.info("üîß ContentCritic: –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ mock-—Ä–µ–∂–∏–º")
            return self._mock_review(draft_content, product_facts, locale)
    
    def _get_system_prompt(self, locale: str) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è ContentCritic"""
        if locale == 'ua':
            return """–¢–∏ ‚Äî –≥–æ–ª–æ–≤–Ω–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä —Ç–∞ SEO-—Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç e-commerce –º–∞–≥–∞–∑–∏–Ω—É. –¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî –ø—Ä–æ–≤–µ—Å—Ç–∏ –∞—É–¥–∏—Ç –ø–æ–≤–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Ç—É —Ç–µ–∫—Å—Ç—ñ–≤ –¥–ª—è –∫–∞—Ä—Ç–∫–∏ —Ç–æ–≤–∞—Ä—É —Ç–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π JSON –∑ –≤–µ—Ä–¥–∏–∫—Ç–æ–º. –ë—É–¥—å –≤–∫—Ä–∞–π —Å—Ç—Ä–æ–≥–∏–º —Ç–∞ —É–≤–∞–∂–Ω–∏–º –¥–æ –¥–µ—Ç–∞–ª–µ–π.

**–í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ:**
1. `product_facts`: –ö–ª—é—á–æ–≤—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä—É (–æ–±'—î–º, –≤–∞–≥–∞, –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è, –≤–∏—Ä–æ–±–Ω–∏–∫).
2. `draft_content`: JSON –∑ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º (`description`, `advantages`, `specs`, `faq_candidates`, `note_buy`).

**–ö—Ä–∏—Ç–µ—Ä—ñ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ –±–ª–æ–∫–∞—Ö:**

1. **`title` (–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–≤–∞—Ä—É):**
   - **–ü–æ–≤–Ω–æ—Ç–∞:** –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –ø–æ–≤–Ω—É –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É, –≤–∫–ª—é—á–∞—é—á–∏ –±—Ä–µ–Ω–¥, –æ–±'—î–º/–≤–∞–≥—É.
   - **–í—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –ª–æ–∫–∞–ª—ñ:** RU –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–æ—Å—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é, UA ‚Äî —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é.
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∞–±–æ `INCOMPLETE` –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ—é –≤–µ—Ä—Å—ñ—î—é.

2. **`description` (–û–ø–∏—Å):**
   - **–§–∞–∫—Ç-—á–µ–∫—ñ–Ω–≥:** –ß–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç–µ–∫—Å—Ç —Ñ–∞–∫—Ç–∞–º (–æ–±'—î–º, –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è)?
   - **–î–æ–≤–∂–∏–Ω–∞ —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:** –ù–µ –º–µ–Ω—à–µ 4-5 —Ä–µ—á–µ–Ω—å. –¢–µ–∫—Å—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –∑–≤'—è–∑–Ω–∏–º —Ç–∞ –ª–µ–≥–∫–æ —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–º.
   - **SEO —Ç–∞ —Å—Ç–∏–ª—å:** –ß–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –∑ –Ω–∞–∑–≤–∏ —Ç–æ–≤–∞—Ä—É? –¢–æ–Ω —Ç–µ–∫—Å—Ç—É ‚Äî –µ–∫—Å–ø–µ—Ä—Ç–Ω–∏–π, –∞–ª–µ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –ø–æ–∫—É–ø—Ü—é.
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∞–±–æ `NEEDS_REWRITE` –∑ –≤–∫–∞–∑—ñ–≤–∫–æ—é –ø—Ä–∏—á–∏–Ω.

3. **`advantages` (–ü–µ—Ä–µ–≤–∞–≥–∏):**
   - **–£–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å:** –ß–∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—é—é—Ç—å –ø–µ—Ä–µ–≤–∞–≥–∏ –æ–¥–Ω–∞ –æ–¥–Ω—É –∑–∞ –∑–º—ñ—Å—Ç–æ–º?
   - **–¶—ñ–Ω–Ω—ñ—Å—Ç—å:** –ß–∏ —î –≤–æ–Ω–∏ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –ø–µ—Ä–µ–≤–∞–≥–∞–º–∏ –¥–ª—è –ø–æ–∫—É–ø—Ü—è, –∞ –Ω–µ –∑–∞–≥–∞–ª—å–Ω–∏–º–∏ —Ñ—Ä–∞–∑–∞–º–∏ ("–≤–∏—Å–æ–∫–∞ —è–∫—ñ—Å—Ç—å")?
   - **–ö—ñ–ª—å–∫—ñ—Å—Ç—å:** –ü–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ 3-4 —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏.
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∞–±–æ `NEEDS_REWRITE`.

4. **`specs` (–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏):**
   - **–ó–ê–ë–û–†–û–ù–ï–ù–û –∑–º—ñ–Ω—é–≤–∞—Ç–∏, –¥–æ–¥–∞–≤–∞—Ç–∏ –∞–±–æ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏!** –ë–ª–æ–∫ specs —î read-only - –ø–æ–≤–µ—Ä—Ç–∞–π –π–æ–≥–æ –±–µ–∑ –∑–º—ñ–Ω.
   - **–ù–ï –¥–æ–¥–∞–≤–∞–π '–ö—Ä–∞—ó–Ω–∞ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞', '–í–∏—Ä–æ–±–Ω–∏–∫' –∞–±–æ –±—É–¥—å-—è–∫—ñ –∑–∞–≥–ª—É—à–∫–∏, —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î —É –≤–∏—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö.**
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` (–∑–∞–≤–∂–¥–∏, –æ—Å–∫—ñ–ª—å–∫–∏ –±–ª–æ–∫ read-only).

5. **`faq_candidates` (–ö–∞–Ω–¥–∏–¥–∞—Ç–∏ –≤ FAQ, —Å–ø–∏—Å–æ–∫ –∑ ~10):**
   - **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª—ñ–∫–∞—Ç–∏ —Ç–µ–º:** –ó–Ω–∞–π–¥–∏ —Ç–∞ –≤—ñ–¥–º—ñ—Ç—å —è–∫ `DUPLICATE_TOPIC` –≤—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è –Ω–∞ –æ–¥–Ω—É —Ç–µ–º—É (–∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è, —Ç–∏–ø —à–∫—ñ—Ä–∏ —Ç–æ—â–æ), –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ.
   - **–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ generic-–≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:** –ó–Ω–∞–π–¥–∏ —Ç–∞ –≤—ñ–¥–º—ñ—Ç—å —è–∫ `GENERIC_ANSWER` –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ-–∑–∞–≥–ª—É—à–∫–∏ ("–∑–≥—ñ–¥–Ω–æ –∑ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—î—é", "–Ω–∞ —É–ø–∞–∫–æ–≤—Ü—ñ" —Ç–æ—â–æ).
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∞–±–æ `NEEDS_FILTERING` –∑ –≤–∫–∞–∑—ñ–≤–∫–æ—é, —è–∫—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤–∏–¥–∞–ª–∏—Ç–∏.

6. **`note_buy` (–ü—Ä–∏–º—ñ—Ç–∫–∞ –ø—Ä–æ –ø–æ–∫—É–ø–∫—É):**
   - **–ü–æ–≤–Ω–æ—Ç–∞:** –ß–∏ –º—ñ—Å—Ç–∏—Ç—å –ø–æ–≤–Ω—É –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É —Ç–∞ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∏–π –∑–∞–∫–ª–∏–∫?
   - **–í—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –ª–æ–∫–∞–ª—ñ:** UA —Ç–µ–∫—Å—Ç —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∞–±–æ `NEEDS_REWRITE`.

**–§–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (—Å—Ç—Ä–æ–≥–æ JSON):**
```json
{
  "overall_status": "VALID|NEEDS_REVISIONS",
  "quality_score": 0.0-1.0,
  "critiques": {
    "title": {"status": "VALID|INCOMPLETE", "issues": [], "suggestions": ""},
    "description": {"status": "VALID|NEEDS_REWRITE", "issues": [], "suggestions": ""},
    "advantages": {"status": "VALID|NEEDS_REWRITE", "issues": [], "suggestions": ""},
    "specs": {"status": "VALID|INCONSISTENT", "issues": [], "suggestions": ""},
    "faq_candidates": {"status": "VALID|NEEDS_FILTERING", "issues": [], "suggestions": ""},
    "note_buy": {"status": "VALID|NEEDS_REWRITE", "issues": [], "suggestions": ""}
  },
  "revised_content": {
    "title": "–≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫",
    "description": "–≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ–ø–∏—Å",
    "advantages": ["–ø–µ—Ä–µ–≤–∞–≥–∞1", "–ø–µ—Ä–µ–≤–∞–≥–∞2"],
    "specs": [{"key": "value"}],
    "faq": [{"question": "–ø–∏—Ç–∞–Ω–Ω—è", "answer": "–≤—ñ–¥–ø–æ–≤—ñ–¥—å"}],
    "note_buy": "–≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–∏–º—ñ—Ç–∫–∞"
  }
}
```"""
        else:
            return """–¢—ã ‚Äî –≥–ª–∞–≤–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏ SEO-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç e-commerce –º–∞–≥–∞–∑–∏–Ω–∞. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–≤–µ—Å—Ç–∏ –∞—É–¥–∏—Ç –ø–æ–ª–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞ —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ –∏ –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON —Å –≤–µ—Ä–¥–∏–∫—Ç–æ–º. –ë—É–¥—å –ø—Ä–µ–¥–µ–ª—å–Ω–æ —Å—Ç—Ä–æ–≥ –∏ –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω –∫ –¥–µ—Ç–∞–ª—è–º.

**–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:**
1. `product_facts`: –ö–ª—é—á–µ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä–∞ (–æ–±—ä—ë–º, –≤–µ—Å, –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å).
2. `draft_content`: JSON —Å –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º (`description`, `advantages`, `specs`, `faq_candidates`, `note_buy`).

**–ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –±–ª–æ–∫–∞–º:**

1. **`title` (–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–≤–∞—Ä–∞):**
   - **–ü–æ–ª–Ω–æ—Ç–∞:** –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –≤–∫–ª—é—á–∞—è –±—Ä–µ–Ω–¥, –æ–±—ä—ë–º/–≤–µ—Å.
   - **–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ª–æ–∫–∞–ª–∏:** RU –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, UA ‚Äî –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º.
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∏–ª–∏ `INCOMPLETE` —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π.

2. **`description` (–û–ø–∏—Å–∞–Ω–∏–µ):**
   - **–§–∞–∫—Ç-—á–µ–∫–∏–Ω–≥:** –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—Å—Ç —Ñ–∞–∫—Ç–∞–º (–æ–±—ä—ë–º, –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ)?
   - **–î–ª–∏–Ω–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:** –ù–µ –º–µ–Ω–µ–µ 4-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–≤—è–∑–Ω—ã–º –∏ –ª–µ–≥–∫–æ —á–∏—Ç–∞–µ–º—ã–º.
   - **SEO –∏ —Å—Ç–∏–ª—å:** –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞? –¢–æ–Ω —Ç–µ–∫—Å—Ç–∞ ‚Äî —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—é.
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∏–ª–∏ `NEEDS_REWRITE` —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∏—á–∏–Ω.

3. **`advantages` (–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞):**
   - **–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å:** –ù–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç –ª–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –ø–æ —Å–º—ã—Å–ª—É?
   - **–¶–µ–Ω–Ω–æ—Å—Ç—å:** –Ø–≤–ª—è—é—Ç—Å—è –ª–∏ –æ–Ω–∏ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è, –∞ –Ω–µ –æ–±—â–∏–º–∏ —Ñ—Ä–∞–∑–∞–º–∏ ("–≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ")?
   - **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** –î–æ–ª–∂–Ω–æ –±—ã—Ç—å 3-4 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞.
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∏–ª–∏ `NEEDS_REWRITE`.

4. **`specs` (–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏):**
   - **–ó–ê–ü–†–ï–©–ï–ù–û –∏–∑–º–µ–Ω—è—Ç—å, –¥–æ–±–∞–≤–ª—è—Ç—å –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏!** –ë–ª–æ–∫ specs —è–≤–ª—è–µ—Ç—Å—è read-only - –≤–æ–∑–≤—Ä–∞—â–∞–π –µ–≥–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
   - **–ù–ï –¥–æ–±–∞–≤–ª—è–π '–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞', '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å' –∏–ª–∏ –ª—é–±—ã–µ –∑–∞–≥–ª—É—à–∫–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.**
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` (–≤—Å–µ–≥–¥–∞, —Ç–∞–∫ –∫–∞–∫ –±–ª–æ–∫ read-only).

5. **`faq_candidates` (–ö–∞–Ω–¥–∏–¥–∞—Ç—ã –≤ FAQ, —Å–ø–∏—Å–æ–∫ –∏–∑ ~10):**
   - **–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã —Ç–µ–º:** –ù–∞–π–¥–∏ –∏ –æ—Ç–º–µ—Ç—å –∫–∞–∫ `DUPLICATE_TOPIC` –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ –æ–¥–Ω—É —Ç–µ–º—É (—Ö—Ä–∞–Ω–µ–Ω–∏–µ, —Ç–∏–ø –∫–æ–∂–∏ –∏ —Ç.–¥.), –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ.
   - **–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ generic-–æ—Ç–≤–µ—Ç—ã:** –ù–∞–π–¥–∏ –∏ –æ—Ç–º–µ—Ç—å –∫–∞–∫ `GENERIC_ANSWER` –æ—Ç–≤–µ—Ç—ã-–∑–∞–≥–ª—É—à–∫–∏ ("—Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", "–Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ" –∏ —Ç.–ø.).
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∏–ª–∏ `NEEDS_FILTERING` —Å —É–∫–∞–∑–∞–Ω–∏–µ–º, –∫–∞–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–¥–∞–ª–∏—Ç—å.

6. **`note_buy` (–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –æ –ø–æ–∫—É–ø–∫–µ):**
   - **–ü–æ–ª–Ω–æ—Ç–∞:** –°–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø—Ä–∏–∑—ã–≤?
   - **–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ª–æ–∫–∞–ª–∏:** RU —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
   - **–í–µ—Ä–¥–∏–∫—Ç:** `VALID` –∏–ª–∏ `NEEDS_REWRITE`.

**–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (—Å—Ç—Ä–æ–≥–æ JSON):**
```json
{
  "overall_status": "VALID|NEEDS_REVISIONS",
  "quality_score": 0.0-1.0,
  "critiques": {
    "title": {"status": "VALID|INCOMPLETE", "issues": [], "suggestions": ""},
    "description": {"status": "VALID|NEEDS_REWRITE", "issues": [], "suggestions": ""},
    "advantages": {"status": "VALID|NEEDS_REWRITE", "issues": [], "suggestions": ""},
    "specs": {"status": "VALID|INCONSISTENT", "issues": [], "suggestions": ""},
    "faq_candidates": {"status": "VALID|NEEDS_FILTERING", "issues": [], "suggestions": ""},
    "note_buy": {"status": "VALID|NEEDS_REWRITE", "issues": [], "suggestions": ""}
  },
  "revised_content": {
    "title": "–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫",
    "description": "–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
    "advantages": ["–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ1", "–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ2"],
    "specs": [{"key": "value"}],
    "faq": [{"question": "–≤–æ–ø—Ä–æ—Å", "answer": "–æ—Ç–≤–µ—Ç"}],
    "note_buy": "–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ"
  }
}
```"""
    
    def _create_user_prompt(self, draft_content: Dict[str, Any], product_facts: Dict[str, Any], locale: str) -> str:
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞"""
        return f"""
**–§–∞–∫—Ç—ã –æ —Ç–æ–≤–∞—Ä–µ:**
{json.dumps(product_facts, ensure_ascii=False, indent=2)}

**–ß–µ—Ä–Ω–æ–≤–∏–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:**
{json.dumps(draft_content, ensure_ascii=False, indent=2)}

**–õ–æ–∫–∞–ª—å:** {locale}

–ü—Ä–æ–≤–µ–¥–∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –≤–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º JSON —Ñ–æ—Ä–º–∞—Ç–µ.
"""
    
    def _mock_review(self, draft_content: Dict[str, Any], product_facts: Dict[str, Any], locale: str) -> Dict[str, Any]:
        """Mock-—Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        logger.info("üîß ContentCritic: –ò—Å–ø–æ–ª—å–∑—É—é mock-—Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        return {
            "overall_status": "NEEDS_REVISIONS",
            "quality_score": 0.6,
            "critiques": {
                "title": {"status": "VALID", "issues": [], "suggestions": ""},
                "description": {"status": "NEEDS_REWRITE", "issues": ["–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"], "suggestions": "–î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π"},
                "advantages": {"status": "VALID", "issues": [], "suggestions": ""},
                "specs": {"status": "VALID", "issues": [], "suggestions": ""},
                "faq_candidates": {"status": "NEEDS_FILTERING", "issues": ["–ï—Å—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã"], "suggestions": "–£–¥–∞–ª–∏—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Ç–µ–º—ã"},
                "note_buy": {"status": "VALID", "issues": [], "suggestions": ""}
            },
            "revised_content": {
                "title": draft_content.get('title', ''),
                "description": draft_content.get('description', ''),
                "advantages": draft_content.get('advantages', []),
                "specs": draft_content.get('specs', []),
                "faq": draft_content.get('faq_candidates', [])[:6],  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 6
                "note_buy": draft_content.get('note_buy', '')
            }
        }
